{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;;AAEA;;AAEA;AACA;AACA,wBAAwB,GAAG;AAC3B;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;ACjDA,gBAAgB,mBAAO,CAAC,6CAAe;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;;AAGA;;AAEA;;;;;;;;;;ACtDA,gBAAgB,mBAAO,CAAC,6CAAe;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACtCA,gBAAgB,mBAAO,CAAC,0CAAY;AACpC,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ,IAAI,cAAc;AAC9D;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;;;;;UCtCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,uDAAoB;AACjD,oBAAoB,mBAAO,CAAC,qDAAmB;AAC/C,qBAAqB,mBAAO,CAAC,uDAAoB;;AAEjD;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH,CAAC,C","sources":["./frontend/api_util.js","./frontend/follow_toggle.js","./frontend/tweet_compose.js","./frontend/users_search.js","webpack/bootstrap","./frontend/twitter.js"],"sourcesContent":["const APIUtil = {\n  followUser: id => {\n    return $.ajax({     \n      url: '/users/' + id + '/follow',\n      dataType: 'json',\n      method: 'POST'\n    })    \n  },\n\n  unfollowUser: id => {    \n    return $.ajax({\n      url: '/users/' + id + '/follow',\n      dataType: 'json',\n      method: 'DELETE'\n    })    \n  },\n\n  // followUser: id => APIUtil.changeFollowStatus(id, 'POST'),\n\n  // unfollowUser: id => APIUtil.changeFollowStatus(id, 'DELETE'),\n\n  // changeFollowStatus: (id, method) => (\n  //   $.ajax({\n  //     url: `/users/${id}/follow`,\n  //     dataType: 'json',\n  //     method\n  //   })\n  // )\n\n  searchUsers: queryVal => {\n    return $.ajax({\n      url: '/users/search',\n      data: { query: queryVal },\n      dataType: 'json',\n      method: 'GET'\n    })\n  },\n\n  createTweet: data => {    \n    $(':input').prop(\"disabled\", true);    \n    return $.ajax({\n      url: '/tweets',\n      data: data,\n      dataType: 'json',\n      method: 'POST'\n    })\n  }\n}\n\nmodule.exports = APIUtil;","const APIUtil = require('./api_util.js')\n\nclass FollowToggle {\n\n  constructor ($follow, options) {\n    this.el = $follow;\n    this.userId = this.el.attr('data-id') || options.userId;\n    this.followState = this.el.attr('data-follow-state') || options.followState;\n    \n    this.render();\n    this.handleClick();\n  }\n\n  render () {\n    if (this.followState === \"followed\") {\n      this.el.text(\"Unfollow!\");\n      this.el.prop(\"disabled\", false)  \n    } else if (this.followState === \"following\") {\n      this.el.text(\"Following...\")\n      this.el.prop(\"disabled\", true)    \n    } else if (this.followState === \"unfollowing\") {\n      this.el.text(\"Unfollowing...\")\n      this.el.prop(\"disabled\", true)\n    } else {\n      this.el.text(\"Follow!\");\n      this.el.prop(\"disabled\", false)  \n    }\n  }\n\n  handleClick () {    \n    this.el.on(\"click\", event => {\n      event.preventDefault();      \n\n      if (this.followState === \"followed\") {\n        this.followState = \"unfollowing\";\n        this.render();   \n        APIUtil.unfollowUser(this.userId).then( () => {          \n          this.followState = \"unfollowed\";\n          this.render();\n        });\n      } else if (this.followState === \"unfollowed\") {   \n        this.followState = \"following\";\n        this.render();   \n        APIUtil.followUser(this.userId).then( () => {\n          this.followState = \"followed\";\n          this.render();\n        });\n      }                      \n    })\n  }\n\n\n}\n\nmodule.exports = FollowToggle;","const APIUtil = require(\"./api_util.js\");\n\nclass TweetCompose {\n  constructor (el) {\n    this.el = el;    \n\n    this.submit();\n    this.el.find('textarea').on('input', event => {\n      this.updateChars(event);\n    });    \n  }\n\n  submit () {\n    this.el.on('submit', event => {     \n      event.preventDefault();\n      const tComp = this;\n      APIUtil.createTweet($(event.currentTarget).serializeJSON()).then( (data) => {                \n        tComp.handleSuccess(data);\n      });\n    })\n  }\n\n  handleSuccess (data) {\n    $('textarea').val(\"\");      \n    $('select').val(\"\");      \n    let newTweet = $('<li>').text(JSON.stringify(data));\n    // console.log(newTweet);\n    $('ul#feed').prepend(newTweet);\n    $(':input').prop(\"disabled\", false);\n  }\n\n  updateChars (event) {\n    let counter = $('.chars-left');\n    let charsSoFar = event.currentTarget.value.length;\n    counter.text(140 - parseInt(charsSoFar));\n  }\n}\n\nmodule.exports = TweetCompose;","const APIUtil = require(\"./api_util\");\nconst FollowToggle = require(\"./follow_toggle\");\n\nclass UsersSearch {\n  constructor ($search) {\n    this.el = $search;\n    this.input = $search.find('input').val();\n    this.ul = $search.find('ul');  \n\n    this.handleInput();\n  }\n\n  handleInput () {\n    this.el.on('input', event => {\n      this.input = $(event.target).val();\n      APIUtil.searchUsers(this.input).then( (resp) => {\n        this.renderResults(resp);\n      })\n    })\n  }\n\n  renderResults (resp) {\n    this.ul.find('li').remove();\n    resp.forEach( (user) => {\n      let $user = $('<li>');\n      $user.html(`<a href=\"/users/${user.id}\">${user.username}</a>`);\n      let $button = $('<button>');\n      new FollowToggle($button, {\n        userId: user.id,\n        followState: (user.followed ? \"followed\" : \"unfollowed\")\n      })    \n      $user.append($button);\n      this.ul.append($user);\n    })\n\n  }\n}\n\nmodule.exports = UsersSearch;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require('./follow_toggle.js');\nconst UsersSearch = require('./users_search.js')\nconst TweetCompose = require('./tweet_compose.js')\n\n$( () => {\n  $('.follow-toggle').each(function() {\n    new FollowToggle($(this));\n  })\n\n  $('nav.users-search').each(function() {\n    new UsersSearch($(this));\n  })\n\n  $('.tweet-compose').each(function() {\n    new TweetCompose($(this));\n  })\n})"],"names":[],"sourceRoot":""}